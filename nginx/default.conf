server {
    listen 80;
    server_name _;

    error_log /var/log/nginx/error.log debug;

    # Serve static files from /usr/share/nginx/html
    root /usr/share/nginx/html;
    index index.html;

    # Global CORS headers (no credentials)
    set $cors_allow_origin "*"; # set to http://localhost:8080 if you need stricter policy

    # Default static handler
    location / {
        add_header Access-Control-Allow-Origin $cors_allow_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        add_header Access-Control-Max-Age 86400 always;

        if ($request_method = OPTIONS) {
            return 204;
        }
        try_files $uri $uri/ =404;
    }

    # Serve static MCP spec files under /mcp/ (no proxy)
    location /mcp/ {
        add_header Access-Control-Allow-Origin $cors_allow_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        add_header Access-Control-Max-Age 86400 always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        # Serve from the mounted volume at /usr/share/nginx/html/mcp
        try_files $uri =404;
    }

    # Route tool-id style calls to the sidecar adapter
    location ^~ /mcp-rest/tools/call/ {
        add_header Access-Control-Allow-Origin $cors_allow_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        add_header Access-Control-Max-Age 86400 always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        proxy_pass http://openweb-to-litellm:8088; # sidecar FastAPI
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }

    # Proxy other MCP REST calls directly to LiteLLM service
    # Note: use service DNS name, not localhost (inside container, localhost != host)
    location /mcp-rest/ {
        # CORS for browser-based clients
        add_header Access-Control-Allow-Origin $cors_allow_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        add_header Access-Control-Max-Age 86400 always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        proxy_pass http://litellm:4000; # preserve full request URI
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }
}
